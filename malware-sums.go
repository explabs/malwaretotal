package main

import (
	"encoding/json"
	"github.com/gin-gonic/gin"
	"io/ioutil"
	"net/http"
	"os"
)

const filename = "malware.json"

type Malware struct {
	Data []Data `json:"data"`
}
type Data struct {
	Title    string `json:"title"`
	Checksum string `json:"checksum"`
	Info     string `json:"info"`
	Counter  int64  `json:"counter"`
}

func (m *Malware) LoadData(filename string) {
	if fileExists(filename) {
		file, _ := ioutil.ReadFile(filename)
		_ = json.Unmarshal(file, m)
	} else {
		return
	}

}

func (m *Malware) Search(checksum string) *Data {
	for i, row := range m.Data {
		if checksum == row.Checksum {
			m.Data[i].Counter += 1
			return &row
		}
	}
	return nil
}

func (m *Malware) SaveData(filename string) {
	file, _ := json.MarshalIndent(m, "", " ")
	_ = ioutil.WriteFile(filename, file, 0644)
}

func CheckIfMalware(c *gin.Context) {
	sum := c.PostForm("sum")
	var m Malware
	m.LoadData(filename)
	data := m.Search(sum)
	m.SaveData(filename)
	if data != nil {
		c.HTML(http.StatusOK, "index.html", gin.H{"data": data})
		return
	}
	c.HTML(http.StatusOK, "index.html", gin.H{"NotMalware": "This is not a malware"})

}

func IndexHandler(c *gin.Context) {
	c.HTML(http.StatusOK, "index.html", gin.H{"NotMalware": " "})
}

func fileExists(filename string) bool {
	info, err := os.Stat(filename)
	if os.IsNotExist(err) {
		return false
	}
	return !info.IsDir()
}

//curl http://localhost:8000/malware -XPOST -F 'sum=d41d8cd98f00b204e9800998ecf8427e'
